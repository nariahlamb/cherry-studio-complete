name: Generate yarn.lock for Cherry Studio

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-lockfile:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python for native modules
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Visual Studio Build Tools
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --includeOptional --passive"
        shell: pwsh

      - name: Install corepack and setup yarn
        run: |
          corepack enable
          corepack prepare yarn@4.6.0 --activate
          yarn --version

      - name: Remove empty yarn.lock
        run: |
          echo "Current yarn.lock size: $(Get-Item 'yarn.lock').Length bytes"
          Remove-Item "yarn.lock" -Force
          echo "Empty yarn.lock removed"
        shell: pwsh

      - name: Set environment for native module builds
        run: |
          echo "PYTHON=$env:pythonLocation\python.exe" >> $env:GITHUB_ENV
          echo "npm_config_python=$env:pythonLocation\python.exe" >> $env:GITHUB_ENV
          echo "npm_config_msvs_version=2022" >> $env:GITHUB_ENV
          echo "npm_config_node_gyp=$env:APPDATA\npm\node_modules\node-gyp\bin\node-gyp.js" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Generate yarn.lock for workspaces (Windows environment)
        run: |
          # Temporarily disable CI detection to allow lockfile generation
          $env:CI = "false"
          $env:GITHUB_ACTIONS = $null
          yarn install --network-timeout 300000
        shell: pwsh
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Verify generated yarn.lock
        run: |
          echo "Generated yarn.lock size: $(Get-Item 'yarn.lock').Length bytes"
          echo "First 10 lines of yarn.lock:"
          Get-Content yarn.lock -Head 10
        shell: pwsh

      - name: Commit and push yarn.lock
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add yarn.lock
          git commit -m "feat(core): generate valid yarn.lock for workspaces monorepo

          - Generated from package.json and workspaces configuration
          - Resolves all dependencies for monorepo structure  
          - Enables proper CI builds with immutable lockfile verification
          - Fixes empty yarn.lock issue identified by deep-code-reasoning analysis
          - Built on Windows with proper native module support"
          git push
        shell: pwsh